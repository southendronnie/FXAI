@inject HighchartsInterop ChartInterop
@inject ChartDataProvider ChartData

<div class="chart-container">
    <div id="@ChartId" class="chart-box"></div>
    <div class="metric-toggle-panel">
        @foreach (var metric in AvailableMetrics)
        {
            <button class="metric-toggle" @onclick="() => ToggleMetric(metric)">
                @metric
            </button>
        }
    </div>
</div>

@code {
    private string ChartId => $"chart-{Guid.NewGuid().ToString("N")}";
    private List<string> AvailableMetrics = new() { "WinRate", "Drawdown", "AvgReturn" };
    private HashSet<string> ActiveMetrics = new();

    protected override async Task OnInitializedAsync()
    {
        ActiveMetrics.Add("WinRate"); // default
        await RenderChartAsync();
    }

    private async Task ToggleMetric(string metric)
    {
        if (!ActiveMetrics.Add(metric))
            ActiveMetrics.Remove(metric);

        await RenderChartAsync();
    }

    private async Task RenderChartAsync()
    {
        var chartOptions = ChartData.BuildOptions(ActiveMetrics.ToList());
        await ChartInterop.RenderChartAsync(ChartId, chartOptions);
    }
}
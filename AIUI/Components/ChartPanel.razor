@inject DashboardState Dashboard
@inject IJSRuntime JS

<div class="chart-container">
    <div id="chartContainer" style="height: 400px; width: 100%;"></div>
</div>
@if (Dashboard.LatestCandles.Any())
{
    <details>
        <summary>ðŸ§ª Debug: Latest Candle</summary>
        <pre>@System.Text.Json.JsonSerializer.Serialize(Dashboard.LatestCandles.Last(), new System.Text.Json.JsonSerializerOptions { WriteIndented = true })</pre>
    </details>
}
@code {
    protected override void OnInitialized()
    {
        Dashboard.OnChange += RefreshChart;
    }

    private async void RefreshChart()
    {
        var ohlcData = Dashboard.LatestCandles
            .Select(c => new[] { ToUnix(c.Time), c.Open, c.High, c.Low, c.Close })
            .ToArray();

        await JS.InvokeVoidAsync("renderOhlcChart", ohlcData);
        StateHasChanged();
    }

    private long ToUnix(DateTime time) =>
        new DateTimeOffset(time).ToUnixTimeMilliseconds();

    public void Dispose()
    {
        Dashboard.OnChange -= RefreshChart;
    }
}